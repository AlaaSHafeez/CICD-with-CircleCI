
# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs

anchor: &anchor
    docker:
      - image: circleci/node:13.8.0

commands:
  print_pipeline_id:
    parameters:
      id: 
        type: string
    steps:
      - run:  echo << parameters.id >>
      - run: echo $CIRCLE_WORKFLOW_ID
jobs:
  print_hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
    - checkout
    - run:
       name: echo "hello"
       command: echo "hello"
  print_world:
    docker:
      - image: circleci/node:13.8.0
    steps:
    - checkout
    - run:
       name: echo "world"
       command: echo "world"
# Shared files topology using  persist_to_workspace and attach_workspace 
  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
    - checkout
    - run: echo "text to output here" > ~/output.txt
    - persist_to_workspace:
        root: ~/
        paths:
          - output.txt

  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
    - checkout
    - attach_workspace:
        at: ~/
    - run: cat ~/output.txt


# Use Anchor, Aliases and Commands 

  my_job: 
    <<: *anchor
    steps:
      - print_pipeline_id

workflows:
  # Name the workflow "welcome"
  welcome:

    # Run the welcome/run job in its own container
    jobs:
      # - print_hello
      # - print_world:
      #     requires:
      #       - print_hello  
      # - save_hello_world_output
      # - print_output_file:
      #     requires:
      #       - save_hello_world_output
      - my_job:
          id: 3
